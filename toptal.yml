---
- hosts: local
  vars:
    docroot: /opt/toptal/toptal_test/siteconf
    image: toptal
    tag: test
    domain: some_domain
  tasks:
  - name: Install apt packages
    apt:
      pkg=git,python-pip
      state=installed
      update_cache=true
  - name: fixing PIP
    shell: easy_install -U pip
  - name: Install docker-py
    pip:
      name=docker-py
  - name: create project directory
    file:
      dest=/opt/toptal
      state=directory
      owner=root
      group=root
      mode="u=rwx,g=rwx"
  - name: Downloading the git repository
    git:
      repo=https://github.com/zozo6015/toptal_test.git
      dest=/opt/toptal/toptal_test
      clone=yes 
      update=yes
  - name: Creating the docroot
    file:
      dest={{ docroot }}
      state=directory
      owner=root
      group=root
      mode="u=rwx,g=rwx"
  - name: Linking the Dockerfile to the running folder
    copy:
      src=/opt/toptal/toptal_test/Dockerfile
      dest=/opt/toptal/Dockerfile
  - name: Linking the startup_service script to the running folder
    copy:
      src=/opt/toptal/toptal_test/start_services.sh
      dest=/opt/toptal/start_services.sh
  - name: Add site config
    template:
      src=/opt/toptal/toptal_test/conf/domain.j2
      dest=/opt/toptal/siteconf/{{ domain }}.conf
      owner=root
      group=root
  - name: Adding sites files
    copy:
      src=/opt/toptal/toptal_test/webroot
      dest=/opt/toptal/webroot
      owner=root
      group=root
      mode="u=rwx,g=rwx"
  - name: Creating docker image for toptal test
    shell: docker build -t "{{ image }}:{{ tag }}" /opt/toptal
  - name: Creating a container from created image
    docker_container:
      name: {{ domain }}
      image: {{ image }}:{{ tag }}
      state: started
      ports:
        - "80:80"